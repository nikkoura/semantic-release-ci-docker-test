language: shell

env:
  global:
    - IMAGE_BASE_NAME=${IMAGE_BASE_NAME}

jobs:
  include:
    - stage: "build and test"
      name: build-amd64
      arch: amd64
      workspaces:
        create:
          name: docker-image-amd64
          paths:
            - image-amd64.tar
      os: linux
      language: shell
      script:
        - IMAGE_VERSION=${TRAVIS_BRANCH} build/build-arch.sh
        #TODO: call test script if available
    - name: build-arm64
      arch: arm64
      workspaces:
        create:
          name: docker-image-arm64
          paths:
            - image-arm64.tar
      os: linux
      language: shell
      script:
        - IMAGE_VERSION=${TRAVIS_BRANCH} build/build-arch.sh
        #TODO: call test script if available

    - stage: auto-tag
      language: node_js
      arch: amd64
      os: linux
      node_js: lts/*
      if: tag IS blank AND branch = master AND type != pull_request AND fork = false
      script:
        - build/autotag.sh

    - stage: push
      arch: amd64
      os: linux
      language: shell
      if: tag IS present and fork = false
      workspaces:
        use:
          - docker-image-amd64
          - docker-image-arm64
      script:
        - docker image load -i image-amd64.tar
        - IMAGE_VERSION=${TRAVIS_TAG} TARGET_ARCH=amd64 build/push-arch.sh
        - docker image load -i image-arm64.tar
        - IMAGE_VERSION=${TRAVIS_TAG} TARGET_ARCH=arm64 build/push-arch.sh

    - stage: manifest
      language: shell
      arch: amd64
      os: linux
      if: tag IS present and fork = false
      script:
        - IMAGE_VERSION=${TRAVIS_TAG} build/manifest.sh
